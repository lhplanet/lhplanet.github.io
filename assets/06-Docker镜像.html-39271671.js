import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as i,c,a as e,b as o,e as a,d as n}from"./app-6f631a46.js";const d={},l=n('<h2 id="镜像" tabindex="-1"><a class="header-anchor" href="#镜像" aria-hidden="true">#</a> 镜像</h2><p>镜像是一种轻量级、可执行的独立软件包，它包含运行某个软件所需的所有内容，我们把应用程序和配置依赖打包好行程一个可交付的运行环境（包括代码、运行时需要的库、环境变量和配置文件等），这个打包好的运行环境就是image镜像文件。</p><h2 id="docker-镜像加载原理" tabindex="-1"><a class="header-anchor" href="#docker-镜像加载原理" aria-hidden="true">#</a> Docker 镜像加载原理</h2><h3 id="联合文件系统" tabindex="-1"><a class="header-anchor" href="#联合文件系统" aria-hidden="true">#</a> 联合文件系统</h3><p>Docker 中的文件存储驱动叫做 storage driver。</p><p>Docker 最早支持的stotage driver是 AUFS，它实际上由一层一层的文件系统组成，这种层级的文件系统叫UnionFS。</p><p>联合文件系统（UnionFS）：Union 文件系统，是一种分层、轻量级并且高性能的文件系统，它支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系统下（unite serveral directories into a single virtual filesystem）。</p><p>Union文件系统是Docker镜像的基础。镜像可以通过分层来进行集成，基于基础镜像可以制作具体的应用镜像。</p><p>特性：一次同时加载多个文件系统，但从外面看起来，只能看到一个文件系统，联合加载会把各层文件系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录。</p><p>后来出现的docker版本中，除了AUFS，还支持OverlayFS、Btrfs、Device Mapper、VFS、ZFS等storage driver。</p><h3 id="bootfs和rootfs" tabindex="-1"><a class="header-anchor" href="#bootfs和rootfs" aria-hidden="true">#</a> bootfs和rootfs</h3><p>bootfs（boot file system）主要包含 bootloader 和 kernel，bootloader主要是引导加载 kernel，Linux刚启动时会加载bootfs文件系统。</p><p>在Docker镜像的最底层是引导文件系统bootfs。这一层与我们典型的Linux/Unix系统是一样的，包含boot加载器和内核。当boot加载完成之后整个内核就都在内存中了，此时内存的使用权已经由 bootfs 转交给内核，此时系统也会卸载 bootfs。</p><p>rootfs（root file system），在bootfs之上，包含的就是典型Linux系统中的 /dev、/proc、/bin、/etc等标准目录和文件。rootfs就是各种不同的操作系统发行版，比如Ubuntu、CentOS等。</p><p>docker镜像底层层次：</p>',15),p={href:"https://cdn.nlark.com/yuque/0/2022/jpeg/12911942/1652093445038-27095471-f01f-4978-a28f-d8e2df893dab.jpeg?x-oss-process=image%2Fresize%2Cw_633%2Climit_0%2Finterlace%2C1",target:"_blank",rel:"noopener noreferrer"},h=e("p",null,"对于一个精简的OS，rootfs可以很小，只需要包括最基本的命令、工具和程序库就可以了，因为底层直接使用Host的Kernel，自己只需要提供rootfs就可以。所以，对于不同的Linux发行版，bootfs基本是一致的，rootfs会有差别，不同的发行版可以共用bootfs。",-1),f=e("p",null,"有差别的rootfs：",-1),_={href:"https://cdn.nlark.com/yuque/0/2022/jpeg/12911942/1652093452907-392b879e-1f7b-478a-97ae-7c37cb9669b3.jpeg?x-oss-process=image%2Fresize%2Cw_637%2Climit_0%2Finterlace%2C1",target:"_blank",rel:"noopener noreferrer"},u=n(`<h2 id="镜像分层" tabindex="-1"><a class="header-anchor" href="#镜像分层" aria-hidden="true">#</a> 镜像分层</h2><p>Docker支持扩展现有镜像，创建新的镜像。新镜像是从base镜像一层一层叠加生成的。</p><p>例如：</p><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code># Version: 0.0.1
FROM debian  # 直接在debain base镜像上构建
MAINTAINER mylinux
RUN apt-get update &amp;&amp; apt-get install -y emacs # 安装emacs
RUN apt-get install -y apache2 # 安装apache2
CMD [&quot;/bin/bash&quot;] # 容器启动时运行bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>镜像创建过程：</p>`,5),b={href:"https://cdn.nlark.com/yuque/0/2022/png/12911942/1652093459380-335e0f0e-1213-47d9-a17b-f49734699ef2.png",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"镜像分层的优势",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#镜像分层的优势","aria-hidden":"true"},"#"),o(" 镜像分层的优势")],-1),g=e("p",null,"镜像分层的一个最大好处就是共享资源，方便复制迁移，方便复用。",-1),k=e("h2",{id:"容器层",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#容器层","aria-hidden":"true"},"#"),o(" 容器层")],-1),v=e("p",null,"当容器启动时，一个新的可写层将被加载到镜像的顶部，这一层通常被称为容器层，容器层之下的都叫镜像层。",-1),x=e("p",null,"所有对容器的改动，无论添加、删除、还是修改文件都只会发生在容器层中。",-1),C=e("p",null,"只有容器层是可写的，容器层下面的所有镜像层都是只读的。",-1),F=e("p",null,"如图：",-1),y={href:"https://cdn.nlark.com/yuque/0/2022/jpeg/12911942/1652093466220-a1c70673-7ca7-4025-9432-d89152439000.jpeg?x-oss-process=image%2Fresize%2Cw_800%2Climit_0%2Finterlace%2C1",target:"_blank",rel:"noopener noreferrer"};function S(j,q){const r=t("ExternalLinkIcon");return i(),c("div",null,[l,e("p",null,[e("a",p,[o("https://cdn.nlark.com/yuque/0/2022/jpeg/12911942/1652093445038-27095471-f01f-4978-a28f-d8e2df893dab.jpeg?x-oss-process=image%2Fresize%2Cw_633%2Climit_0%2Finterlace%2C1"),a(r)])]),h,f,e("p",null,[e("a",_,[o("https://cdn.nlark.com/yuque/0/2022/jpeg/12911942/1652093452907-392b879e-1f7b-478a-97ae-7c37cb9669b3.jpeg?x-oss-process=image%2Fresize%2Cw_637%2Climit_0%2Finterlace%2C1"),a(r)])]),u,e("p",null,[e("a",b,[o("https://cdn.nlark.com/yuque/0/2022/png/12911942/1652093459380-335e0f0e-1213-47d9-a17b-f49734699ef2.png"),a(r)])]),m,g,k,v,x,C,F,e("p",null,[e("a",y,[o("https://cdn.nlark.com/yuque/0/2022/jpeg/12911942/1652093466220-a1c70673-7ca7-4025-9432-d89152439000.jpeg?x-oss-process=image%2Fresize%2Cw_800%2Climit_0%2Finterlace%2C1"),a(r)])])])}const N=s(d,[["render",S],["__file","06-Docker镜像.html.vue"]]);export{N as default};
