import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,e as t,d as e}from"./app-80c0fd9a.js";const i={},r=e(`<h2 id="一、数据库操作" tabindex="-1"><a class="header-anchor" href="#一、数据库操作" aria-hidden="true">#</a> 一、数据库操作</h2><p>默认保留的数据库</p><ul><li><strong>admin</strong>: 从权限角度考虑, 这是 <code>root</code> 数据库, 如果将一个用户添加到这个数据库, 这个用户自动继承所有数据库的权限, 一些特定的服务器端命令也只能从这个数据库运行, 比如列出所有的数据库或者关闭服务器</li><li><strong>local</strong>: 数据永远不会被复制, 可以用来存储限于本地的单台服务器的集合 (部署集群, 分片等)</li><li><strong>config</strong>: Mongo 用于分片设置时, <code>config</code> 数据库在内部使用, 用来保存分片的相关信息</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 选择和创建数据库的语法格式：</span>
$ show dbs

<span class="token comment"># 如果数据库不存在则自动创建，例如，以下语句创建 spitdb 数据库：</span>
$ use articledb

<span class="token comment"># 查看有权限查看的所有的数据库命令</span>
$ show dbs
<span class="token comment"># 或</span>
$ show databases

<span class="token comment"># 查看当前正在使用的数据库</span>
$ db

<span class="token comment"># 删除数据库（主要用来删除已经持久化的数据库）</span>
$ db.dropDatabase<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当使用 <code>use articledb</code> 的时候. <code>articledb</code> 其实存放在内存之中, 当 <code>articledb</code> 中存在一个 collection 之后, mongo 才会将这个数据库持久化到硬盘之中.</p><p>MongoDB 中默认的数据库为 test，如果你没有选择数据库，集合将存放在 test 数据库中。</p><p>另外：</p><p>数据库名可以是满足以下条件的任意UTF-8字符串。</p><ul><li>不能是空字符串（&quot;&quot;)。</li><li>不得含有&#39; &#39;（空格)、.、$、/、\\和\\0 (空字符)。</li><li>应全部小写。</li><li>最多64字节。</li></ul><h2 id="二、集合操作" tabindex="-1"><a class="header-anchor" href="#二、集合操作" aria-hidden="true">#</a> 二、集合操作</h2><p>集合，类似关系型数据库中的表。</p><p>可以显示的创建，也可以隐式的创建。</p><h3 id="_1-集合的显式创建-了解" tabindex="-1"><a class="header-anchor" href="#_1-集合的显式创建-了解" aria-hidden="true">#</a> 1.集合的显式创建（了解）</h3><p>基本语法格式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.createCollection<span class="token punctuation">(</span>name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数说明：</p><ul><li>name: 要创建的集合名称</li></ul><p>例如：创建一个名为 mycollection 的普通集合。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.createCollection<span class="token punctuation">(</span><span class="token string">&quot;mycollection&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看当前库中的表：show tables命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>show collections
或
show tables
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>集合的命名规范：</p><ul><li>集合名不能是空字符串&quot;&quot;。</li><li>集合名不能含有\\0字符（空字符)，这个字符表示集合名的结尾。</li><li>集合名不能以&quot;system.&quot;开头，这是为系统集合保留的前缀。</li><li>用户创建的集合名字不能含有保留字符。有些驱动程序的确支持在集合名里面包含，这是因为某些系统生成的集合中包含该字符。除非你要访问这种系统创建的集合，否则千万不要在名字里出现$。</li></ul><h3 id="_2-集合的隐式创建" tabindex="-1"><a class="header-anchor" href="#_2-集合的隐式创建" aria-hidden="true">#</a> 2.集合的隐式创建</h3><p>当向一个集合中插入一个文档的时候，如果集合不存在，则会自动创建集合。</p><p>详见 <code>文档的插入</code> 章节。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>通常我们使用隐式创建文档即可。</p></div><h3 id="_3-集合的删除" tabindex="-1"><a class="header-anchor" href="#_3-集合的删除" aria-hidden="true">#</a> 3.集合的删除</h3><p>集合删除语法格式如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.collection.drop<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 或</span>
db.集合.drop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值：</p><p>如果成功删除选定集合，则 drop() 方法返回 true，否则返回 false。</p><p>例如：要删除mycollection集合</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.mycollection.drop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="三、文档基本-crud" tabindex="-1"><a class="header-anchor" href="#三、文档基本-crud" aria-hidden="true">#</a> 三、文档基本 CRUD</h2>`,35),u={href:"https://docs.mongodb.com/manual/crud/",target:"_blank",rel:"noopener noreferrer"},d=n("h3",{id:"_1-创建-create",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-创建-create","aria-hidden":"true"},"#"),s(" 1.创建 Create")],-1),k={href:"https://docs.mongodb.com/manual/core/document/#bson-document-format",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.mongodb.com/manual/core/databases-and-collections/#collections",target:"_blank",rel:"noopener noreferrer"},v=n("strong",null,"not",-1),g=e(`<ul><li>使用 <code>db.&lt;collection_name&gt;.insertOne()</code> 向集合中添加<em>一个文档</em>, 参数一个 json 格式的文档</li><li>使用 <code>db.&lt;collection_name&gt;.insertMany()</code> 向集合中添加<em>多个文档</em>, 参数为 json 文档数组</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token operator">&lt;</span>document or array <span class="token keyword">of</span> documents<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">writeConcern</span><span class="token operator">:</span> <span class="token operator">&lt;</span>document<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">ordered</span><span class="token operator">:</span> <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 向集合中添加一个文档</span>
db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;canvas&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;cotton&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">35.5</span><span class="token punctuation">,</span> <span class="token literal-property property">uom</span><span class="token operator">:</span> <span class="token string">&quot;cm&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
              
<span class="token comment">// 向集合中添加多个文档</span>
db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;journal&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;blank&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token literal-property property">uom</span><span class="token operator">:</span> <span class="token string">&quot;cm&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;mat&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;gray&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">27.9</span><span class="token punctuation">,</span> <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">35.5</span><span class="token punctuation">,</span> <span class="token literal-property property">uom</span><span class="token operator">:</span> <span class="token string">&quot;cm&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;mousepad&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;gel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">22.85</span><span class="token punctuation">,</span> <span class="token literal-property property">uom</span><span class="token operator">:</span> <span class="token string">&quot;cm&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li><p>comment集合如果不存在，则会隐式创建</p></li><li><p>当我们向 <code>collection</code> 中插入 <code>document</code> 文档时, 如果没有给文档指定 <code>_id</code> 属性, 那么数据库会为文档自动添加 <code>_id</code> field, 并且值类型是 <code>ObjectId(blablabla)</code>, 就是文档的唯一标识, 类似于 relational database 里的 <code>primary key</code></p></li><li><p>mongo 中的数字, 默认情况下是 double 类型, 如果要存整型, 必须使用函数 <code>NumberInt(整型数字)</code>, 否则取出来就有问题了</p></li><li><p>插入当前日期可以使用 <code>new Date()</code></p></li><li><p>如果某字段没值，可以赋值为null，或不写该字段。</p></li><li><p>文档中的键/值对是有序的。</p></li><li><p>文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型（甚至可以是整个嵌入的文档)。</p></li><li><p>MongoDB区分类型和大小写。</p></li><li><p>MongoDB的文档不能有重复的键。</p></li><li><p>文档的键是字符串。除了少数例外情况，键可以使用任意UTF-8字符。</p></li><li><p>文档键命名规范：</p><ul><li>键不能含有\\0 (空字符)。这个字符用来表示键的结尾。</li><li>.和$有特别的意义，只有在特定环境下才能使用。</li><li>以下划线&quot;_&quot;开头的键是保留的(不是严格要求的)。</li></ul></li></ul></div><p>如果某条数据插入失败, 将会终止插入, 但已经插入成功的数据<strong>不会回滚掉</strong>. 因为批量插入由于数据较多容易出现失败, 因此, 可以使用 <code>try catch</code> 进行异常捕捉处理, 测试的时候可以不处理.如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;我们不应该把清晨浪费在手机上, 健康很重要, 一杯温水幸福你我 他.&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1002&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;相忘于江湖&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-0805T22:08:15.522Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;我夏天空腹喝凉开水, 冬天喝温开水&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1005&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;伊人憔 悴&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-05T23:58:51.485Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">888</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;我一直喝凉开水, 冬天夏天都喝.&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1004&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;杰克船 长&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-06T01:05:06.321Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;专家说不能空腹吃饭, 影响健康.&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;凯 撒&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-06T08:18:35.288Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;研究表明, 刚烧开的水千万不能喝, 因为烫 嘴.&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;凯撒&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-0806T11:01:02.521Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span>

<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">print</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-查询-read" tabindex="-1"><a class="header-anchor" href="#_2-查询-read" aria-hidden="true">#</a> 2.查询 Read</h3><ul><li>使用 <code>db.&lt;collection_name&gt;.find()</code> 方法对集合进行查询, 接受一个 json 格式的查询条件. 返回的是一个<strong>数组</strong></li><li><code>db.&lt;collection_name&gt;.findOne()</code> 查询集合中符合条件的<u>第一个</u>文档, 返回的是一个<strong>对象</strong></li></ul><figure><img src="https://lhplanet-1316168555.cos.ap-beijing.myqcloud.com/obsidian/202309200923819.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>投影查询：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span>db.comment.find<span class="token punctuation">(</span><span class="token punctuation">{</span>userid:<span class="token string">&quot;1003&quot;</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span>userid:1,nickname:1,_id:0<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span> <span class="token string">&quot;userid&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;1003&quot;</span>, <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;凯撒&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string">&quot;userid&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;1003&quot;</span>, <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;凯撒&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以使用 <code>$in</code> 操作符表示<em>范围查询</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token punctuation">{</span> $<span class="token keyword">in</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>多个查询条件用逗号分隔, 表示 <code>AND</code> 的关系</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等价于下面 sql 语句</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>SELECT * FROM inventory WHERE status = &quot;A&quot; AND qty &lt; 30
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 <code>$or</code> 操作符表示后边数组中的条件是OR的关系</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">$or</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等价于下面 sql 语句</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>SELECT * FROM inventory WHERE status = &quot;A&quot; OR qty &lt; 30
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>联合使用 <code>AND</code> 和 <code>OR</code> 的查询语句</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span>
     <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">$or</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^p</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 terminal 中查看结果可能不是很方便, 所以我们可以用 <code>pretty()</code> 来帮助阅读</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pretty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>匹配内容</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">comments</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">$elemMatch</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">&#39;Harry Potter&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pretty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 正则表达式</span>
db<span class="token punctuation">.</span><span class="token operator">&lt;</span>collection_name<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">content</span> <span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">once</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建索引</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">title</span> <span class="token operator">:</span> <span class="token string">&#39;text&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 文本搜索</span>
<span class="token comment">// will return document with title &quot;Post One&quot;</span>
<span class="token comment">// if there is no more posts created</span>
db<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">$text</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">$search</span> <span class="token operator">:</span> <span class="token string">&quot;\\&quot;Post O\\&quot;&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pretty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-更新-update" tabindex="-1"><a class="header-anchor" href="#_3-更新-update" aria-hidden="true">#</a> 3.更新 Update</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.collection.update<span class="token punctuation">(</span>query, update, options<span class="token punctuation">)</span>
<span class="token comment"># 或</span>
db.collection.update<span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>query<span class="token operator">&gt;</span>,
  <span class="token operator">&lt;</span>update<span class="token operator">&gt;</span>,
  <span class="token punctuation">{</span>
    upsert: <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span>,
    multi: <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span>,
    writeConcern: <span class="token operator">&lt;</span>document<span class="token operator">&gt;</span>,
    collation: <span class="token operator">&lt;</span>document<span class="token operator">&gt;</span>,
    arrayFilters: <span class="token punctuation">[</span> <span class="token operator">&lt;</span>filterdocument<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>, <span class="token punctuation">..</span>. <span class="token punctuation">]</span>,
    hint: <span class="token operator">&lt;</span>document<span class="token operator">|</span>string<span class="token operator">&gt;</span> <span class="token comment"># Available starting in MongoDB 4.2</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://lhplanet-1316168555.cos.ap-beijing.myqcloud.com/obsidian/202309200935065.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>使用 <code>db.&lt;collection_name&gt;.updateOne(&lt;filter&gt;, &lt;update&gt;, &lt;options&gt;)</code> 方法修改一个匹配 <code>&lt;filter&gt;</code> 条件的文档</li><li>使用 <code>db.&lt;collection_name&gt;.updateMany(&lt;filter&gt;, &lt;update&gt;, &lt;options&gt;)</code> 方法修改所有匹配 <code>&lt;filter&gt;</code> 条件的文档</li><li>使用 <code>db.&lt;collection_name&gt;.replaceOne(&lt;filter&gt;, &lt;update&gt;, &lt;options&gt;)</code> 方法<strong>替换</strong>一个匹配 <code>&lt;filter&gt;</code> 条件的文档</li><li><code>db.&lt;collection_name&gt;.update(查询对象, 新对象)</code> 默认情况下会使用<u>新对象替换旧对象</u></li></ul><p>其中 <code>&lt;filter&gt;</code> 参数与查询方法中的条件参数用法一致.</p><p>如果需要修改指定的属性, 而不是替换需要用“修改操作符”来进行修改</p><ul><li><code>$set</code> 修改文档中的制定属性</li></ul><p>其中最常用的修改操作符即为<code>$set</code>和<code>$unset</code>,分别表示<strong>赋值</strong>和<strong>取消赋值</strong>.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;paper&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">$set</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;size.uom&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cm&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;P&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">$currentDate</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">lastModified</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">updateMany</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">$set</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;size.uom&quot;</span><span class="token operator">:</span> <span class="token string">&quot;in&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;P&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">$currentDate</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">lastModified</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37),b={href:"https://docs.mongodb.com/manual/reference/operator/update/set/#up._S_set",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"$set",-1),y=n("code",null,"size.uom",-1),q=n("code",null,'"cm"',-1),_=n("code",null,"status",-1),f=n("code",null,'"P"',-1),x={href:"https://docs.mongodb.com/manual/reference/operator/update/currentDate/#up._S_currentDate",target:"_blank",rel:"noopener noreferrer"},$=n("code",null,"$currentDate",-1),j=n("code",null,"lastModified",-1),w=n("code",null,"lastModified",-1),D={href:"https://docs.mongodb.com/manual/reference/operator/update/currentDate/#up._S_currentDate",target:"_blank",rel:"noopener noreferrer"},O=n("code",null,"$currentDate",-1),S={href:"https://docs.mongodb.com/manual/reference/operator/update/currentDate/#up._S_currentDate",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"$currentDate",-1),I=e(`<p><code>db.&lt;collection_name&gt;.replaceOne()</code> 方法替换除 <code>_id</code> 属性外的<strong>所有属性</strong>, 其<code>&lt;update&gt;</code>参数应为一个<strong>全新的文档</strong>.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.inventory.replaceOne(
    { item: &quot;paper&quot; },
    { item: &quot;paper&quot;, instock: [ { warehouse: &quot;A&quot;, qty: 60 }, { warehouse: &quot;B&quot;, qty: 40 } ] }
)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>批量修改</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 默认会修改第一条</span>
db<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">userid</span><span class="token operator">:</span> <span class="token string">&quot;30&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> $set <span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 修改所有符合条件的数据</span>
db<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">userid</span><span class="token operator">:</span> <span class="token string">&quot;30&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> $set <span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">multi</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>列值增长的修改</strong></p><p>如果我们想实现对某列值在原有值的基础上进行增加或减少, 可以使用 <code>$inc</code> 运算符来实现</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">$inc</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">likeNum</span><span class="token operator">:</span> <span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="修改操作符" tabindex="-1"><a class="header-anchor" href="#修改操作符" aria-hidden="true">#</a> 修改操作符</h4>`,8),N=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Name"),n("th",{style:{"text-align":"left"}},"Description")])],-1),z={style:{"text-align":"left"}},E={href:"https://docs.mongodb.com/manual/reference/operator/update/currentDate/#up._S_currentDate",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"$currentDate",-1),A=n("td",{style:{"text-align":"left"}},"Sets the value of a field to current date, either as a Date or a Timestamp.",-1),R={style:{"text-align":"left"}},B={href:"https://docs.mongodb.com/manual/reference/operator/update/inc/#up._S_inc",target:"_blank",rel:"noopener noreferrer"},C=n("code",null,"$inc",-1),P=n("td",{style:{"text-align":"left"}},"Increments the value of the field by the specified amount.",-1),F={style:{"text-align":"left"}},U={href:"https://docs.mongodb.com/manual/reference/operator/update/min/#up._S_min",target:"_blank",rel:"noopener noreferrer"},Z=n("code",null,"$min",-1),H=n("td",{style:{"text-align":"left"}},"Only updates the field if the specified value is less than the existing field value.",-1),L={style:{"text-align":"left"}},V={href:"https://docs.mongodb.com/manual/reference/operator/update/max/#up._S_max",target:"_blank",rel:"noopener noreferrer"},W=n("code",null,"$max",-1),K=n("td",{style:{"text-align":"left"}},"Only updates the field if the specified value is greater than the existing field value.",-1),G={style:{"text-align":"left"}},J={href:"https://docs.mongodb.com/manual/reference/operator/update/mul/#up._S_mul",target:"_blank",rel:"noopener noreferrer"},Q=n("code",null,"$mul",-1),X=n("td",{style:{"text-align":"left"}},"Multiplies the value of the field by the specified amount.",-1),Y={style:{"text-align":"left"}},nn={href:"https://docs.mongodb.com/manual/reference/operator/update/rename/#up._S_rename",target:"_blank",rel:"noopener noreferrer"},sn=n("code",null,"$rename",-1),an=n("td",{style:{"text-align":"left"}},"Renames a field.",-1),tn={style:{"text-align":"left"}},en={href:"https://docs.mongodb.com/manual/reference/operator/update/set/#up._S_set",target:"_blank",rel:"noopener noreferrer"},pn=n("code",null,"$set",-1),on=n("td",{style:{"text-align":"left"}},"Sets the value of a field in a document.",-1),cn={style:{"text-align":"left"}},ln={href:"https://docs.mongodb.com/manual/reference/operator/update/setOnInsert/#up._S_setOnInsert",target:"_blank",rel:"noopener noreferrer"},rn=n("code",null,"$setOnInsert",-1),un=n("td",{style:{"text-align":"left"}},"Sets the value of a field if an update results in an insert of a document. Has no effect on update operations that modify existing documents.",-1),dn={style:{"text-align":"left"}},kn={href:"https://docs.mongodb.com/manual/reference/operator/update/unset/#up._S_unset",target:"_blank",rel:"noopener noreferrer"},mn=n("code",null,"$unset",-1),vn=n("td",{style:{"text-align":"left"}},"Removes the specified field from a document.",-1),gn=e(`<h3 id="_4-删除-delete" tabindex="-1"><a class="header-anchor" href="#_4-删除-delete" aria-hidden="true">#</a> 4.删除 Delete</h3><ul><li>使用 <code>db.collection.deleteMany()</code> 方法删除<u>所有</u>匹配的文档.</li><li>使用 <code>db.collection.deleteOne()</code> 方法删除<u>单个</u>匹配的文档.</li><li><code>db.collection.drop()</code></li><li><code>db.dropDatabase()</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">qty</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span> <span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Delete operations <strong>do not drop indexes</strong>, even if deleting all documents from a collection.</p><p>一般数据库中的数据都不会真正意义上的删除, 会添加一个字段, 用来表示这个数据是否被删除</p><h2 id="四、文档排序和投影-sort-projection" tabindex="-1"><a class="header-anchor" href="#四、文档排序和投影-sort-projection" aria-hidden="true">#</a> 四、文档排序和投影 (sort &amp; projection)</h2><h3 id="_1-排序-sort" tabindex="-1"><a class="header-anchor" href="#_1-排序-sort" aria-hidden="true">#</a> 1.排序 Sort</h3><p>在查询文档内容的时候, 默认是按照 <code>_id</code> 进行排序</p><p>我们可以用 <code>$sort</code> 更改文档排序规则</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{ $sort: { &lt;field1&gt;: &lt;sort order&gt;, &lt;field2&gt;: &lt;sort order&gt; ... } }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>For the field or fields to sort by, set the sort order to <code>1</code> or <code>-1</code> to specify an <em>ascending</em> or <em>descending</em> sort respectively, as in the following example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">aggregate</span><span class="token punctuation">(</span>
   <span class="token punctuation">[</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">$sort</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">age</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">posts</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
     <span class="token comment">// ascending on posts and descending on age</span>
   <span class="token punctuation">]</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="sort-operator-and-memory" tabindex="-1"><a class="header-anchor" href="#sort-operator-and-memory" aria-hidden="true">#</a> <code>$sort</code> Operator and Memory</h4><h4 id="sort-limit-memory-optimization" tabindex="-1"><a class="header-anchor" href="#sort-limit-memory-optimization" aria-hidden="true">#</a> <code>$sort</code> + <code>$limit</code> Memory Optimization</h4>`,14),bn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/sort/index.html#pipe._S_sort",target:"_blank",rel:"noopener noreferrer"},hn=n("code",null,"$sort",-1),yn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/limit/#pipe._S_limit",target:"_blank",rel:"noopener noreferrer"},qn=n("code",null,"$limit",-1),_n={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/limit/#pipe._S_limit",target:"_blank",rel:"noopener noreferrer"},fn=n("code",null,"$limit",-1),xn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/sort/index.html#pipe._S_sort",target:"_blank",rel:"noopener noreferrer"},$n=n("code",null,"$sort",-1),jn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/sort/index.html#pipe._S_sort",target:"_blank",rel:"noopener noreferrer"},wn=n("code",null,"$sort",-1),Dn=n("strong",null,[s("only maintain the top "),n("code",null,"n"),s(" results as it progresses")],-1),On=n("code",null,"n",-1),Sn=n("code",null,"n",-1),Mn=n("code",null,"allowDiskUse",-1),In=n("code",null,"true",-1),Nn=n("code",null,"n",-1),zn={href:"https://docs.mongodb.com/manual/core/aggregation-pipeline-limits/#agg-memory-restrictions",target:"_blank",rel:"noopener noreferrer"},En=e(`<p>Optimizations are subject to change between releases.</p><blockquote><p>有点类似于用 heap 做 topK 这种问题, 只维护 k 个大小的 heap, 会加速 process</p></blockquote><p>举个例子:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">title</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pretty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-投影-projection" tabindex="-1"><a class="header-anchor" href="#_2-投影-projection" aria-hidden="true">#</a> 2.投影 Projection</h3><p>有些情况, 我们对文档进行查询并不是需要所有的字段, 比如只需要 id 或者 用户名, 我们可以对文档进行“投影”</p><ul><li><code>1</code> - display</li><li><code>0</code> - dont display</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> db.users.find<span class="token punctuation">(</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span>username: <span class="token number">1</span><span class="token punctuation">}</span> <span class="token punctuation">)</span>

<span class="token operator">&gt;</span> db.users.find<span class="token punctuation">(</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span>age: <span class="token number">1</span>, _id: <span class="token number">0</span><span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、foreach" tabindex="-1"><a class="header-anchor" href="#五、foreach" aria-hidden="true">#</a> 五、forEach()</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> db.posts.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.forEach<span class="token punctuation">(</span>fucntion<span class="token punctuation">(</span>doc<span class="token punctuation">)</span> <span class="token punctuation">{</span> print<span class="token punctuation">(</span><span class="token string">&#39;Blog Post: &#39;</span> + doc.title<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="六、其他查询方式" tabindex="-1"><a class="header-anchor" href="#六、其他查询方式" aria-hidden="true">#</a> 六、其他查询方式</h2><h3 id="_1-正则表达式" tabindex="-1"><a class="header-anchor" href="#_1-正则表达式" aria-hidden="true">#</a> 1.正则表达式</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ db.collection.find<span class="token punctuation">(</span><span class="token punctuation">{</span>field:/正则表达式/<span class="token punctuation">}</span><span class="token punctuation">)</span>

$ db.collection.find<span class="token punctuation">(</span><span class="token punctuation">{</span>字段:/正则表达式/<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-比较查询" tabindex="-1"><a class="header-anchor" href="#_2-比较查询" aria-hidden="true">#</a> 2.比较查询</h3><p><code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code> 这些操作符也是很常用的, 格式如下:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 大于: field &gt; value</span>
db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 小于: field &lt; value</span>
db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gte</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 大于等于: field &gt;= value</span>
db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lte</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 小于等于: field &lt;= value</span>
db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$ne</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 不等于: field != value</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-包含查询" tabindex="-1"><a class="header-anchor" href="#_3-包含查询" aria-hidden="true">#</a> 3.包含查询</h4><p>包含使用 <code>$in</code> 操作符. 示例：查询评论的集合中 <code>userid</code> 字段包含 <code>1003</code> 或 <code>1004</code>的文档</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.comment.find({userid:{$in:[&quot;1003&quot;,&quot;1004&quot;]}})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>不包含使用 <code>$nin</code> 操作符. 示例：查询评论集合中 <code>userid</code> 字段不包含 <code>1003</code> 和 <code>1004</code> 的文档</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.comment.find({userid:{$nin:[&quot;1003&quot;,&quot;1004&quot;]}})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="七、常用命令小结" tabindex="-1"><a class="header-anchor" href="#七、常用命令小结" aria-hidden="true">#</a> 七、常用命令小结</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>选择切换数据库：use articledb
插入数据：db.comment.insert({bson数据})
查询所有数据：db.comment.find();
条件查询数据：db.comment.find({条件})
查询符合条件的第一条记录：db.comment.findOne({条件})
查询符合条件的前几条记录：db.comment.find({条件}).limit(条数)
查询符合条件的跳过的记录：db.comment.find({条件}).skip(条数)

修改数据：db.comment.update({条件},{修改后的数据})
        或
        db.comment.update({条件},{$set:{要修改部分的字段:数据})

修改数据并自增某字段值：db.comment.update({条件},{$inc:{自增的字段:步进值}})

删除数据：db.comment.remove({条件})
统计查询：db.comment.count({条件})
模糊查询：db.comment.find({字段名:/正则表达式/})
条件比较运算：db.comment.find({字段名:{$gt:值}})
包含查询：db.comment.find({字段名:{$in:[值1, 值2]}})
        或
        db.comment.find({字段名:{$nin:[值1, 值2]}})

条件连接查询：db.comment.find({$and:[{条件1},{条件2}]})
           或
           db.comment.find({$or:[{条件1},{条件2}]})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function Tn(An,Rn){const a=o("ExternalLinkIcon");return c(),l("div",null,[r,n("blockquote",null,[n("p",null,[s("官方文档: "),n("a",u,[s("https://docs.mongodb.com/manual/crud/"),t(a)])])]),d,n("blockquote",null,[n("p",null,[s("Create or insert operations add new "),n("a",k,[s("documents"),t(a)]),s(" to a "),n("a",m,[s("collection"),t(a)]),s(". If the collection does "),v,s(" currently exist, insert operations will create the collection automatically.")])]),g,n("ul",null,[n("li",null,[s("uses the "),n("a",b,[h,t(a)]),s(" operator to update the value of the "),y,s(" field to "),q,s(" and the value of the "),_,s(" field to "),f,s(",")]),n("li",null,[s("uses the "),n("a",x,[$,t(a)]),s(" operator to update the value of the "),j,s(" field to the current date. If "),w,s(" field does not exist, "),n("a",D,[O,t(a)]),s(" will create the field. See "),n("a",S,[M,t(a)]),s(" for details.")])]),I,n("table",null,[N,n("tbody",null,[n("tr",null,[n("td",z,[n("a",E,[T,t(a)])]),A]),n("tr",null,[n("td",R,[n("a",B,[C,t(a)])]),P]),n("tr",null,[n("td",F,[n("a",U,[Z,t(a)])]),H]),n("tr",null,[n("td",L,[n("a",V,[W,t(a)])]),K]),n("tr",null,[n("td",G,[n("a",J,[Q,t(a)])]),X]),n("tr",null,[n("td",Y,[n("a",nn,[sn,t(a)])]),an]),n("tr",null,[n("td",tn,[n("a",en,[pn,t(a)])]),on]),n("tr",null,[n("td",cn,[n("a",ln,[rn,t(a)])]),un]),n("tr",null,[n("td",dn,[n("a",kn,[mn,t(a)])]),vn])])]),gn,n("p",null,[s("When a "),n("a",bn,[hn,t(a)]),s(" precedes a "),n("a",yn,[qn,t(a)]),s(" and there are no intervening stages that modify the number of documents, the optimizer can coalesce the "),n("a",_n,[fn,t(a)]),s(" into the "),n("a",xn,[$n,t(a)]),s(". This allows the "),n("a",jn,[wn,t(a)]),s(" operation to "),Dn,s(", where "),On,s(" is the specified limit, and ensures that MongoDB only needs to store "),Sn,s(" items in memory. This optimization still applies when "),Mn,s(" is "),In,s(" and the "),Nn,s(" items exceed the "),n("a",zn,[s("aggregation memory limit"),t(a)]),s(".")]),En])}const Pn=p(i,[["render",Tn],["__file","03-基本常用命令.html.vue"]]);export{Pn as default};
