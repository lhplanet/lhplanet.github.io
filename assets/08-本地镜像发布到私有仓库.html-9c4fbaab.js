import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as i,d as a}from"./app-42cc0bba.js";const d={},r=a(`<h2 id="docker-registry" tabindex="-1"><a class="header-anchor" href="#docker-registry" aria-hidden="true">#</a> Docker Registry</h2><p>Docker Registry是官方提供的工具，用于构建私有镜像仓库。</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Docker Registry也是Docker Hub提供的一个镜像，可以直接拉取运行。</p><p>步骤：</p><ol><li>拉取镜像</li></ol><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>docker pull registry
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>启动Docker Registry</li></ol><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>docker run -d -p 5000:5000 -v /app/myregistry/:/tmp/registry --privileged=true registry
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>验证（查看私服中的所有镜像）</li></ol><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>curl http://192.168.xxx.xxx:5000/v2/_catalog
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Registry会返回json格式的所有镜像目录</p><h2 id="向registry私仓中上传镜像" tabindex="-1"><a class="header-anchor" href="#向registry私仓中上传镜像" aria-hidden="true">#</a> 向Registry私仓中上传镜像</h2><h3 id="配置docker允许接收http请求" tabindex="-1"><a class="header-anchor" href="#配置docker允许接收http请求" aria-hidden="true">#</a> 配置docker允许接收http请求</h3><p>（配置方式和上传到nexus私仓相同）</p><p>修改/etc/docker/daemon.json，添加insecure-registries允许http：</p><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>{
    &quot;registry-mirros&quot;: [&quot;https://xxxx.mirror.aliyuncs.com&quot;],
    &quot;insecure-registries&quot;: [&quot;192.168.xxx.xxx:5000&quot;]
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后重启docker：（新版本的docker会立即生效）</p><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code># centos6 的命令
sudo chkconfig daemon-reload
sudo service docker restart

# centos7 的命令
sudo systemctl daemon-reload
sudo systemctl restart docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="推送到私仓" tabindex="-1"><a class="header-anchor" href="#推送到私仓" aria-hidden="true">#</a> 推送到私仓</h3><p>步骤：</p><ol><li>添加一个对应私仓地址的tag</li></ol><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>docker tag lee/myubuntu:1.0.1 192.168.xxx.xxx:5000/lee/myubuntu:1.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>push到私仓</li></ol><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>docker push 192.168.xxx.xxx:5000/lee/myubuntu:1.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>查看私仓中镜像目录验证</li></ol><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>curl http://192.168.xxx.xxx:5000/v2/_catalog
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>拉取验证：</p><div class="language-Shell line-numbers-mode" data-ext="Shell"><pre class="language-Shell"><code>docker pull 192.169.xxx.xxx:5000/lee/myubuntu:1.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,29),s=[r];function n(c,t){return l(),i("div",null,s)}const h=e(d,[["render",n],["__file","08-本地镜像发布到私有仓库.html.vue"]]);export{h as default};
